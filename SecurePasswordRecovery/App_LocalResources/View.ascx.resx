<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyReceived.Text" xml:space="preserve">
    <value>&lt;h3&gt;Already Received a code?&lt;/h3&gt;

    &lt;p&gt;If you have already received a password reset code, &lt;a href="[RESETURL]"&gt;click here&lt;/a&gt; to reset your password.&lt;/p&gt;</value>
  </data>
  <data name="btnRequestPasswordReset.Text" xml:space="preserve">
    <value>Request Password Reset</value>
  </data>
  <data name="btnResetPassword.Text" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="PerformReset.Text" xml:space="preserve">
    <value>Please enter your reset code and desired new password into the fields below and select "Change Password" to complete the reset process.</value>
  </data>
  <data name="RequestPrompt.Text" xml:space="preserve">
    <value>If you would like to have your password reset, please supply your username or e-mail address below and an e-mail will be sent to you with instructions on resetting your password.</value>
  </data>
  <data name="RequiredField.Text" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="ResetEmail.Text" xml:space="preserve">
    <value>&lt;p&gt;Hi [FIRSTNAME]&lt;/p&gt;
&lt;p&gt;A password reset request has been received for your [PORTALNAME] account. &lt;/p&gt;
&lt;p&gt;If you did not request your password you may simply delete this e-mail.&lt;/p&gt;
&lt;p&gt;This request was for the account with the &lt;strong&gt;Login : &lt;/strong&gt; [USERNAME].&lt;/p&gt;
&lt;p&gt;To reset your password, &lt;a href="[RESETLINK]"&gt;click here&lt;/a&gt;, your reset code of [CODE], will be pre-filled.  &lt;/p&gt;
&lt;p&gt;Simply supply a new password and you will be able to login.  If you are unable to click the link, you may copy and paste [RESETLINK] into your browsers address bar.&lt;/p&gt;
&lt;br /&gt;
&lt;p&gt;Regards&lt;/p&gt;
&lt;p&gt;[PORTALNAME] Support&lt;/p&gt;
&lt;p&gt;&lt;a href="[PORTALURL]"&gt;[PORTALURL]&lt;/a&gt;&lt;/p&gt;</value>
  </data>
  <data name="ResetEmailSubject.Text" xml:space="preserve">
    <value>Password Reset Request</value>
  </data>
  <data name="ExpiredCode.Text" xml:space="preserve">
    <value>Password reset code not found or has expired</value>
  </data>
  <data name="InvalidCode.Text" xml:space="preserve">
    <value>Password reset code is invalid.</value>
  </data>
  <data name="lblConfirmPassword.Text" xml:space="preserve">
    <value>Confirm New Password:</value>
  </data>
  <data name="lblNewPassword.Text" xml:space="preserve">
    <value>New Password:</value>
  </data>
  <data name="lblResetCode.Text" xml:space="preserve">
    <value>Reset Code:</value>
  </data>
  <data name="lblUsernameOrEmail.Text" xml:space="preserve">
    <value>Username or Email:</value>
  </data>
  <data name="RequestSent.Text" xml:space="preserve">
    <value>If we found an account with the email or login you provided, well then we just sent you an email with a reset link. Otherwise, well then we didn't. </value>
  </data>
  <data name="ResetSuccess.Text" xml:space="preserve">
    <value>Your password has been reset, you may now &lt;a href="[LOGIN]"&gt;login&lt;/a&gt;.</value>
  </data>
  <data name="CaptchaError.Text" xml:space="preserve">
    <value>We need to make sure you are indeed a human being and not a bot.  So we need you to type in the letters and numbers in the image into the box below "EXACTLY" as they appear before we'll let you through.  </value>
  </data>
</root>